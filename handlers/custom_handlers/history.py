from telebot.types import Message

from api.api_search_film import search_film_at_api
from loader import bot
from database.models import User, Query, Movie
from keyboards.reply.back_button import back_to_history_button, back_to_menu_button  # –û—Ç–¥–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
from states.bot_stages import MyStates
from keyboards.reply import menu_buttons

@bot.message_handler(commands=["history"])
def show_history(message: Message):
    bot.set_state(message.from_user.id, MyStates.viewing_history)
    show_history_content(message)

def show_history_content(message: Message):
    username = message.from_user.username
    user, _ = User.get_or_create(username=username)

    history = Query.select().where(Query.user == user)
    saved_movies = Movie.select().where(Movie.user == user)

    response = ""

    if history.exists():
        response += "–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤:\n"
        for record in history:
            timestamp_str = record.timestamp.strftime("%Y-%m-%d %H:%M:%S")
            response += f"{record.movie_name} (–ó–∞–ø—Ä–æ—Å –æ—Ç: {timestamp_str})\n"
    else:
        response += "–í–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—É—Å—Ç–∞.\n"

    if saved_movies.exists():
        response += "\n–í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å–º—ã:\n"
        for movie in saved_movies:
            response += f"{movie.title}\n"
    else:
        response += "\n–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤."

    bot.reply_to(message, response, reply_markup=back_to_menu_button())  # –¢–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    bot.register_next_step_handler(message, handle_search_in_history)

@bot.message_handler(state=MyStates.viewing_history)
def handle_history(message: Message):
    if message.text == "üîô –ù–∞–∑–∞–¥ –∫ –∏—Å—Ç–æ—Ä–∏–∏":
        show_history_content(message)
    elif message.text == "üîù –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.set_state(message.from_user.id, MyStates.main_menu)
        bot.send_message(
            message.chat.id,
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=menu_buttons.menu_buttons()
        )
    else:
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
            reply_markup=back_to_menu_button()  # –¢–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        )

@bot.message_handler(state=MyStates.searching_in_history)
def handle_search_in_history(message: Message):
    if message.text == "üîô –ù–∞–∑–∞–¥ –∫ –∏—Å—Ç–æ—Ä–∏–∏":
        bot.set_state(message.from_user.id, MyStates.viewing_history)
        show_history_content(message)
    elif message.text == "üîù –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        bot.set_state(message.from_user.id, MyStates.main_menu)
        bot.send_message(
            message.chat.id,
            "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=menu_buttons.menu_buttons()
        )
    else:
        search_in_history_content(message)

def search_in_history_content(message: Message):
    username = message.from_user.username
    user, _ = User.get_or_create(username=username)
    name = message.text
    needed_id = None
    saved_movies = Movie.select().where(Movie.user == user)

    if saved_movies.exists():
        for movie in saved_movies:
            if movie.title.lower() == name.lower():
                needed_id = str(movie.movie_id)
                break

        if needed_id:
            result, photo = search_film_at_api(needed_id)
            bot.send_photo(message.chat.id, photo, caption=result, reply_markup=back_to_history_button())  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        else:
            bot.reply_to(message, "–§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≤–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏.", reply_markup=back_to_history_button())  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∏–ª—å–º–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞.", reply_markup=back_to_history_button())  # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"

    bot.register_next_step_handler(message, handle_search_in_history)
